generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id_user    Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  role       Role        @default(PEMBELI)
  createdAt  DateTime    @default(now())
  token      String?     @unique
  updatedAt  DateTime    @default(now()) @db.DateTime(0)
  diskusi    Diskusi[]   @relation("DiskusiToUser")
  organisasi Organisasi? @relation("OrganisasiToUser")
  pegawai    Pegawai?    @relation("PegawaiToUser")
  pembeli    Pembeli?    @relation("PembeliToUser")
  penitip    Penitip?    @relation("PenitipToUser")
  session    Session[]   @relation("SessionToUser")

  @@map("users")
}

model Jabatan {
  id_jabatan   Int       @id @default(autoincrement())
  nama_jabatan String    @db.VarChar(32)
  createdAt    DateTime  @default(now())
  pegawai      Pegawai[] @relation("PegawaiToJabatan")

  @@map("jabatan")
}

model Pegawai {
  prefix           String       @default("P") @db.Char(1)
  id_pegawai       Int          @id @default(autoincrement())
  id_user          Int          @unique
  nama             String       @db.VarChar(255)
  nomor_telepon    String       @db.VarChar(15)
  komisi           Float
  tgl_lahir        DateTime
  id_jabatan       Int
  created_at       DateTime     @default(now())
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @default(now()) @db.DateTime(0)
  user             User         @relation("PegawaiToUser", fields: [id_user], references: [id_user], map: "fk_pegawai_to_user")
  jabatan          Jabatan      @relation("PegawaiToJabatan", fields: [id_jabatan], references: [id_jabatan])
  pengiriman_kurir Pengiriman[] @relation("PengirimanToKurir")
  penitipan_hunter Penitipan[]  @relation("PenitipanToHunter")
  penitipan_qc     Penitipan[]  @relation("PenitipanToPegawaiQC")

  @@index([id_jabatan], map: "pegawai_id_jabatan_fkey")
  @@map("pegawai")
}

model Organisasi {
  prefix          String          @default("ORG") @db.Char(3)
  id_organisasi   Int             @id @default(autoincrement())
  id_user         Int             @unique
  nama_organisasi String          @db.VarChar(255)
  alamat          String          @db.Text
  nomor_telepon   String          @db.VarChar(15)
  deskripsi       String          @db.VarChar(255)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @db.DateTime(0)
  user            User            @relation("OrganisasiToUser", fields: [id_user], references: [id_user], map: "fk_organisasi_to_user")
  request_donasi  RequestDonasi[] @relation("RequestDonasiToOrganisasi")

  @@map("organisasi")
}

model Penitip {
  prefix          String      @default("T") @db.Char(1)
  id_penitip      Int         @id @default(autoincrement())
  id_user         Int         @unique
  nomor_ktp       String      @unique @db.VarChar(32)
  foto_ktp        String      @db.VarChar(255)
  nama            String      @db.VarChar(255)
  alamat          String      @db.VarChar(255)
  nomor_telepon   String      @db.VarChar(15)
  saldo           Float
  rating          Float
  total_review    Float
  jumlah_review   Int
  total_per_bulan Float
  is_top_seller   Boolean     @default(false)
  poin            Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now()) @db.DateTime(0)
  user            User        @relation("PenitipToUser", fields: [id_user], references: [id_user], onDelete: Cascade, map: "fk_penitip_to_user")
  penitipan       Penitipan[] @relation("PenitipanToPenitip")
  all_rating      Rating[]    @relation("RatingToPenitip")

  @@map("penitip")
}

model Pembeli {
  id_pembeli     Int                 @id @default(autoincrement())
  id_user        Int                 @unique
  nama           String              @db.VarChar(255)
  nomor_telepon  String              @db.VarChar(15)
  poin_loyalitas Int
  alamat         Alamat[]            @relation("AlamatToPembeli")
  keranjang      Keranjang[]         @relation("KeranjangToPembeli")
  user           User                @relation("PembeliToUser", fields: [id_user], references: [id_user], onDelete: Cascade, map: "fk_pembeli_to_user")
  redeem_merch   RedeemMerchandise[] @relation("RedeemMerchToPembeli")
  transaksi      Transaksi[]         @relation("TransaksiToPembeli")

  @@map("pembeli")
}

model Alamat {
  id_alamat      Int         @id @default(autoincrement())
  nama_alamat    String      @db.VarChar(255)
  detail_alamat  String      @db.VarChar(255)
  status_default Boolean     @default(false)
  id_pembeli     Int
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @default(now()) @db.DateTime(0)
  pembeli        Pembeli     @relation("AlamatToPembeli", fields: [id_pembeli], references: [id_pembeli], onDelete: Cascade, map: "fk_alamat_to_pembeli")
  transaksi      Transaksi[] @relation("TransaksiToAlamat")

  @@index([id_pembeli], map: "fk_alamat_to_pembeli")
  @@map("alamat")
}

model RedeemMerchandise {
  id_redeem_merch Int                       @id @default(autoincrement())
  tanggal_redeem  DateTime                  @default(now())
  tanggal_ambil   DateTime?
  id_pembeli      Int
  id_merchandise  Int
  jumlah_merch    Int
  status          StatusRedeemMerch         @default(BELUM_DIAMBIL)
  pembeli         Pembeli                   @relation("RedeemMerchToPembeli", fields: [id_pembeli], references: [id_pembeli], onDelete: Cascade, map: "fk_redeem_merch_to_pembeli")
  merchandise     Merchandise               @relation("RedeemMerchToMerchandise", fields: [id_merchandise], references: [id_merchandise], onDelete: Cascade, map: "fk_detail_redeem_to_merchandise")

  @@index([id_pembeli], map: "fk_redeem_merch_to_pembeli")
  @@index([id_merchandise], map: "fk_redeem_merch_to_merchandise")
  @@map("redeem_merchandise")
}

model Merchandise {
  id_merchandise Int                       @id @default(autoincrement())
  nama_merch     String                    @db.VarChar(255)
  harga_poin     Int
  stok           Int
  createdAt      DateTime                  @default(now())
  updatedAt      DateTime                  @default(now()) @db.DateTime(0)
  redeem_merch   RedeemMerchandise[] @relation("RedeemMerchToMerchandise")

  @@map("merchandise")
}

model Kategori {
  id_kategori   Int      @id @default(autoincrement())
  nama_kategori String   @db.VarChar(255)
  barang        Barang[] @relation("BarangToKategori")

  @@map("kategori")
}

model Barang {
  prefix           String           @db.Char(1)
  id_barang        Int              @id @default(autoincrement())
  nama_barang      String           @db.VarChar(255)
  deskripsi        String           @db.VarChar(255)
  harga            Float
  status           StatusBarang     @default(TERSEDIA)
  garansi          DateTime?
  berat            Float
  id_kategori      Int
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now()) @db.DateTime(0)
  kategori         Kategori         @relation("BarangToKategori", fields: [id_kategori], references: [id_kategori], onDelete: Cascade, map: "fk_barang_to_kategori")
  diskusi          Diskusi[]        @relation("DiskusiToBarang")
  donasi           Donasi?          @relation("DonasiToBarang")
  detail_penitipan DetailPenitipan? @relation("DetailPenitipanToBarang")
  detail_transaksi DetailTransaksi? @relation("DetailTransaksiToBarang")
  gambar           GambarBarang[]   @relation("GambarBarangToBarang")
  keranjang        Keranjang[]      @relation("KeranjangToBarang")

  @@index([id_kategori], map: "fk_barang_to_kategori")
  @@map("barang")
}

model GambarBarang {
  id_gambar    Int      @id @default(autoincrement())
  url_gambar   String   @db.VarChar(255)
  is_primary   Boolean  @default(false)
  order_number Int      @default(0)
  id_barang    Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @db.DateTime(0)
  barang       Barang   @relation("GambarBarangToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_gambar_barang_to_barang")

  @@index([id_barang], map: "fk_gambar_barang_to_barang")
  @@map("gambar_barang")
}

model Diskusi {
  id_diskusi      Int      @id @default(autoincrement())
  tanggal_diskusi DateTime @default(now())
  pesan           String   @db.VarChar(255)
  id_barang       Int
  id_user         Int
  barang          Barang   @relation("DiskusiToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_diskusi_to_barang")
  user            User     @relation("DiskusiToUser", fields: [id_user], references: [id_user], onDelete: Cascade, map: "fk_diskusi_to_user")

  @@index([id_barang], map: "fk_diskusi_to_barang")
  @@index([id_user], map: "fk_diskusi_to_user")
  @@map("diskusi")
}

model Transaksi {
  id_transaksi       Int               @id @default(autoincrement())
  tanggal_transaksi  DateTime          @default(now())
  total_harga        Float
  status_Pembayaran  StatusPembayaran  @default(BELUM_DIBAYAR)
  tanggal_pembayaran DateTime?
  batas_pembayaran   DateTime
  bukti_transfer     String?           @db.VarChar(255)
  total_poin         Int
  potongan_poin      Int               @default(0)
  metode_pengiriman  MetodePengiriman  @default(DIAMBIL)
  ongkos_kirim       Float             @default(0)
  total_akhir        Float
  id_pembeli         Int
  id_alamat          Int?
  id_cs_verif        Int?
  updatedAt          DateTime          @default(now()) @db.DateTime(0)
  detail_transaksi   DetailTransaksi[] @relation("DetailTransaksiToTransaksi")
  pengiriman         Pengiriman?       @relation("PengirimanToTransaksi")
  alamat             Alamat?           @relation("TransaksiToAlamat", fields: [id_alamat], references: [id_alamat], map: "fk_transaksi_to_alamat")
  pembeli            Pembeli           @relation("TransaksiToPembeli", fields: [id_pembeli], references: [id_pembeli], onDelete: Cascade, map: "fk_transaksi_to_pembeli")

  @@index([id_alamat], map: "fk_transaksi_to_alamat")
  @@index([id_pembeli], map: "fk_transaksi_to_pembeli")
  @@map("transaksi")
}

model DetailTransaksi {
  id_dtl_transaksi Int       @id @default(autoincrement())
  id_barang        Int       @unique
  id_transaksi     Int?
  is_rating        Boolean   @default(false)
  poin             Int
  komisi_hunter    Float     @default(0)
  komisi_reusemart Float     @default(0)
  komisi_penitip   Float     @default(0)      
  createdAt        DateTime  @default(now())
  barang           Barang    @relation("DetailTransaksiToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_detail_transaksi_to_barang")
  transaksi        Transaksi? @relation("DetailTransaksiToTransaksi", fields: [id_transaksi], references: [id_transaksi], onDelete: Cascade, map: "fk_detail_transaksi_to_transaksi")
  rating           Rating?   @relation("RatingToDetailTransaksi")

  @@index([id_transaksi], map: "fk_detail_transaksi_to_transaksi")
  @@map("dtl_transaksi")
}

model Keranjang {
  id_keranjang Int      @id @default(autoincrement())
  id_barang    Int
  id_pembeli   Int
  is_selected  Boolean  @default(false)
  createdAt    DateTime @default(now())
  barang       Barang   @relation("KeranjangToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_keranjang_to_barang")
  pembeli      Pembeli  @relation("KeranjangToPembeli", fields: [id_pembeli], references: [id_pembeli], onDelete: Cascade, map: "fk_keranjang_to_pembeli")

  @@index([id_barang], map: "fk_keranjang_to_barang")
  @@index([id_pembeli], map: "fk_keranjang_to_pembeli")
  @@map("keranjang")
}

model RequestDonasi {
  id_request      Int                 @id @default(autoincrement())
  deskripsi       String              @db.VarChar(255)
  tanggal_request DateTime            @default(now())
  status          StatusRequestDonasi @default(MENUNGGU)
  id_organisasi   Int
  donasi          Donasi?             @relation("DonasiToRequestDonasi")
  organisasi      Organisasi          @relation("RequestDonasiToOrganisasi", fields: [id_organisasi], references: [id_organisasi], onDelete: Cascade, map: "fk_request_donasi_to_organisasi")

  @@index([id_organisasi], map: "fk_request_donasi_to_organisasi")
  @@map("request_donasi")
}

model Donasi {
  id_donasi      Int           @id @default(autoincrement())
  tanggal_donasi DateTime      @default(now())
  nama_penerima  String        @db.VarChar(255)
  poin_penitip   Int           @default(0)
  id_barang      Int           @unique
  id_request     Int           @unique
  barang         Barang        @relation("DonasiToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_donasi_to_barang")
  request        RequestDonasi @relation("DonasiToRequestDonasi", fields: [id_request], references: [id_request], onDelete: Cascade, map: "fk_donasi_to_request")

  @@map("donasi")
}

model Penitipan {
  id_penitipan     Int               @id @default(autoincrement())
  id_penitip       Int
  id_hunter        Int?
  id_pegawai_qc    Int
  detail_penitipan DetailPenitipan[] @relation("DetailPenitipanToPenitipan")
  hunter           Pegawai?          @relation("PenitipanToHunter", fields: [id_hunter], references: [id_pegawai], onDelete: Cascade, map: "fk_penitipan_to_hunter")
  penitip          Penitip           @relation("PenitipanToPenitip", fields: [id_penitip], references: [id_penitip], onDelete: Cascade, map: "fk_penitipan_to_penitip")
  pegawai_qc       Pegawai           @relation("PenitipanToPegawaiQC", fields: [id_pegawai_qc], references: [id_pegawai], onDelete: Cascade, map: "fk_penitipan_to_qc")

  @@index([id_hunter], map: "fk_penitipan_to_hunter")
  @@index([id_penitip], map: "fk_penitipan_to_penitip")
  @@index([id_pegawai_qc], map: "fk_penitipan_to_qc")
  @@map("penitipan")
}

model DetailPenitipan {
  id_dtl_penitipan Int       @id @default(autoincrement())
  id_penitipan     Int
  id_barang        Int       @unique
  tanggal_masuk    DateTime  @default(now())
  tanggal_akhir    DateTime
  tanggal_laku     DateTime?
  batas_ambil      DateTime
  is_perpanjang    Boolean   @default(false)
  barang           Barang    @relation("DetailPenitipanToBarang", fields: [id_barang], references: [id_barang], onDelete: Cascade, map: "fk_detail_penitipan_to_barang")
  penitipan        Penitipan @relation("DetailPenitipanToPenitipan", fields: [id_penitipan], references: [id_penitipan], onDelete: Cascade, map: "fk_detail_penitipan_to_penitipan")


  @@index([id_penitipan], map: "fk_detail_penitipan_to_penitipan")
  @@map("dtl_penitipan")
}

model Pengiriman {
  id_pengiriman     Int              @id @default(autoincrement())
  tanggal           DateTime?
  status_pengiriman StatusPengiriman @default(DIPROSES)
  id_kurir          Int?
  id_transaksi      Int              @unique
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now()) @db.DateTime(0)
  kurir             Pegawai?         @relation("PengirimanToKurir", fields: [id_kurir], references: [id_pegawai], onDelete: Cascade, map: "fk_pengiriman_to_kurir")
  transaksi         Transaksi        @relation("PengirimanToTransaksi", fields: [id_transaksi], references: [id_transaksi], onDelete: Cascade, map: "fk_pengiriman_to_transaksi")

  @@index([id_kurir], map: "fk_pengiriman_to_kurir")
  @@map("pengiriman")
}

model Session {
  id_session Int       @id @default(autoincrement())
  token      String    @unique
  createdAt  DateTime  @default(now())
  expiresAt  DateTime?
  id_user    Int
  user       User      @relation("SessionToUser", fields: [id_user], references: [id_user], onDelete: Cascade, map: "fk_session_to_user")

  @@index([id_user], map: "fk_session_to_user")
  @@map("session")
}

model Rating {
  id_rating        Int             @id @default(autoincrement())
  rating           Int
  id_penitip       Int
  id_dtl_transaksi Int             @unique
  createdAt        DateTime        @default(now())
  dtl_transaksi    DetailTransaksi @relation("RatingToDetailTransaksi", fields: [id_dtl_transaksi], references: [id_dtl_transaksi], onDelete: Cascade, map: "fk_rating_to_dtl_transaksi")
  penitip          Penitip         @relation("RatingToPenitip", fields: [id_penitip], references: [id_penitip], onDelete: Cascade, map: "fk_rating_to_penitip")

  @@index([id_penitip], map: "fk_rating_to_penitip")
  @@map("rating")
}

enum Role {
  PEMBELI
  PENITIP
  PEGAWAI
  ORGANISASI
}

enum StatusPembayaran {
  BELUM_DIBAYAR
  SUDAH_DIBAYAR
  DITERIMA
  DIBATALKAN
}

enum MetodePengiriman {
  DIAMBIL
  DIKIRIM
}

enum StatusBarang {
  TERSEDIA
  PROSES_PEMBAYARAN
  KEMBALI
  DIDONASIKAN
  TERDONASI
  TERJUAL
}

enum StatusPengiriman {
  DIPROSES
  SIAP_DIAMBIL
  SEDANG_DIKIRIM
  SUDAH_DITERIMA
}

enum StatusRequestDonasi {
  MENUNGGU
  DISETUJUI
}

enum StatusRedeemMerch {
  BELUM_DIAMBIL
  SUDAH_DIAMBIL
}
